# This is a basic workflow to help you get started with Actions

name: Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    name: Build and deploy Gatsby site
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Node.js
        uses: actions/setup-node@v1
        with: 
          node-version: '13.x'

      - name: Install Project Dependencies
        run: npm ci
      
      - name: Install Gatsby CLI
        run: npm install -g gatsby-cli@2.12.34

      # Runs a set of commands using the runners shell
      - name: Build
        run: gatsby build
      
      - name: Verify build
        run: ls -la public
      
      - name: Copy the Index.html to Ubuntu server
        uses: marcodallasanta/ssh-scp-deploy@v1.2.0
        with:
           local: 'myapp'                                                  # Local file path - REQUIRED false - DEFAULT ./
           remote: '/home/azureuser'                                                 # Remote file path - REQUIRED false - DEFAULT ~/
           host: ${{secrets.REMOTE_HOST}}                                      # Remote server address - REQUIRED true
           port: ${{secrets.PORT}}                                      # Remote server port - REQUIRED false - DEFAULT 22
           user: ${{secrets.REMOTE_USER}}                                      # Remote server user - REQUIRED true
           password: ${{secrets.PASSWORD}}                              # User password - REQUIRED at least one of "password" or "key" 
           key: ${{secrets.SERVER_SSH_KEY}}                                      # Remote server private key - REQUIRED at least one of "password" or "key" 
           ARGS: "-rltgoDzvO"
           SOURCE: "myapp"
           pre_upload: echo "remove the files"  # Command to run via ssh before scp upload - REQUIRED false
           post_upload: sudo mv myapp/* /var/www/html/ # Command to run via ssh after scp upload - REQUIRED false
          #  ssh_options: -o StrictHostKeyChecking=no                     # A set of ssh_option separated by -o - REQUIRED false - DEFAULT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          #  scp_options: -v  
